// This database is autogenerated from IANA timezone database
//    https://www.iana.org/time-zones
// and can be updated on demand in this repository
#include <TZ.h>

// "TZ_" macros follow DST change across seasons without source code change
// check for your nearest city in TZ.h

// example of a timezone with a variable Daylight-Saving-Time:
// demo: watch automatic time adjustment on Summer/Winter change (DST)
#define MYTZ TZ_Europe_London

////////////////////////////////////////////////////////

#include <ESP8266WiFi.h>
#include <coredecls.h> // settimeofday_cb()
#include <MyAlarm.h>

////////////////////////////////////////////////////////
#define STASSID "your-ssid"
#define STAPSK "your-password"

bool timeIsSet = false;
// called when time is set from the sntp server
void timeIsSet_cb()
{
  if (!timeIsSet)
  {
    Serial.println("Time is set, starting alarm service");
    timeIsSet = true;
    timerAlarm.startService();
  }
}

void nowTimer()
{
  time_t curtime;
  time(&curtime);
  tm *tminfo = localtime(&curtime);
  Serial.print("The current date/time is: ");
  Serial.println(asctime(tminfo));
}

void blinkTimer()
{
  digitalWrite(LED_BUILTIN, !digitalRead(LED_BUILTIN));
}

void helloTimer()
{
  Serial.print("Hello ");
  Serial.println(timerAlarm.getNextAlarm().getCounter());
  timerAlarm.createTimer(0, 0, 1, blinkTimer).run(3);
}

void crazyTimer()
{
  uint8_t seconds = random(1, 20);

  Serial.print("crazy timer after ");
  Serial.print(seconds);
  Serial.println(" seconds");

  timerAlarm.createTimer(0, 0, seconds, crazyTimer).runOnce();
}

void morningAlarm()
{
  Serial.println("wake up! it's morning");
}

void weekendAlarm()
{
  Serial.println("the weeeeekend !");
}

void ofTheMonth()
{
  Serial.println("of the month");
}

void endAlarm()
{
  Serial.println("it's the END");
  timerAlarm.createTimer(0, 0, 10, ofTheMonth).run(5);
}

void firstWeekAlarm()
{
  Serial.print("it's day ");
  Serial.println(timerAlarm.getNextAlarm().getCounter());
}

void setup()
{
  Serial.begin(115200);
  Serial.println("\nStarting...\n");

  // wait for time to be set from SNTP server
  timerAlarm.stopService();

  // install callback - called when settimeofday is called (by SNTP or us)
  // once enabled (by DHCP), SNTP is updated every hour
  settimeofday_cb(timeIsSet_cb);

  // NTP servers may be overriden by your DHCP server for a more local one
  // (see below)

  // ----> Here is the ONLY ONE LINE needed in your sketch

  configTime(MYTZ, "pool.ntp.org");

  //       Here is the ONLY ONE LINE needed in your sketch <----
  // pick a value from TZ.h (search for this file in your filesystem) for MYTZ

  // start network
  WiFi.mode(WIFI_STA);
  WiFi.begin(STASSID, STAPSK);

  // config alarms and timers
  timerAlarm.createTimer(0, 0, 5, helloTimer);
  timerAlarm.createTimer(0, 0, 1, nowTimer);
  timerAlarm.createTimer(0, 0, 10, crazyTimer).runOnce();
  timerAlarm.createDay(7, 30, 0, morningAlarm);
  int8_t weekEnd[] = {timerAlarm.dw_Saturday, timerAlarm.dw_Sunday};
  timerAlarm.createWeek(weekEnd, 10, 0, 0, 2, weekendAlarm);
  timerAlarm.createMonth(31, 8, 0, 0, endAlarm);
  int8_t firstWeek[] = {1, 2, 3, 4, 5, 6, 7};
  timerAlarm.createMonth(firstWeek, 10, 0, 0, 7, firstWeekAlarm);
}

void loop()
{
  timerAlarm.update();
}
